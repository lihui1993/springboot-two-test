<?xml version="1.0" encoding="utf-8"?>
<!--scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true-->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                当scan为true时，此属性生效-->
<configuration scan="true" scanPeriod="120">
    <!-- 定义变量值的标签,可以使“${}”来使用变量
        %d{HH: mm:ss.SSS}——日志输出时间
        %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
        %-5level——日志级别，并且使用5个字符靠左对齐
        %logger{36}——日志输出者的名字
        %msg——日志消息
        %n——平台的换行符      -->
    <property name="loggingPath" value="D:/log4j/springBootTwoTest.log"></property>
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} %msg %n"/>
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} %msg %n"/>

    <!--configuration下的子节点：appender、root、loger-->
    <!--格式化日志输出节点,class用来指定哪种输出策略/通道，常用就是控制台输出策略和文件输出策略/通道-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--过滤掉INFO级别以下的日志不输出到文件中-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter"><level>INFO</level></filter>
        <!--表示对日志进行编码-->
        <encoder><pattern>${CONSOLE_LOG_PATTERN}</pattern></encoder>
    </appender>
    <!--RollingFileAppender用于切分文件日志-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder><pattern>${FILE_LOG_PATTERN}</pattern></encoder>
        <file>${loggingPath}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志的切分方式——把每一天的日志归档到一个文件中-->
            <fileNamePattern>${loggingPath}/logginglihui.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <!--指定日志文件的上限大小,到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <!--指定最基础的日志输出级别-->
    <root level="info">
        <!--标识这个appender将会添加到这个loger-->
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
    </root>
    <!--用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>
    name:用来指定受此loger约束的某一个包或者具体的某一个类
    level:用来设置打印级别，大小写无关
    additivity:是否向上级loger传递打印信息。默认是true-->
    <logger name="cn.allcheer.springbootbylihui" level="info" additivity="false">
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
    </logger>

</configuration>
